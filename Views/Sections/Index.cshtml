@model IEnumerable<FileUpload.Models.Section>

@{
    ViewData["Title"] = "Index";
}
<script src="~/js/site.js"></script>

<div id="pdftarget">
    <h2 style="text-align:center"><strong>Parse Result</strong></h2>
    <p style="text-align:center">@ViewData["name"]</p>
    <br />

    <div>
        <p><strong>MZ Header</strong></p>
        <p>
            Magic id:
            @foreach (Byte part in ViewBag.MZid)
            {
                @part.ToString("X2");
            }
        </p>
        <p>
            Header size:
            @foreach (Byte part in ViewBag.MZsize)
            {
                @part.ToString("X2");
            }
            paragraphs (16 bytes /paragraph)
        </p>
    </div>
    <br />

    <div>
        <p><strong>Default area</strong></p>
        <p>@ViewBag.info</p>
    </div>
    <br />

    <div>
        <p><strong>PE Header</strong></p>
        <p>
            Magic id:
            @foreach (Byte part in ViewBag.PEid)
            {
                @part.ToString("X2");
            }
        </p>
        <p>
            Machine Type:
            @foreach (Byte part in ViewBag.MachineType)
            {
                @part.ToString("X2");
            }
        </p>
        <p>
            Section Amount:
            @foreach (Byte part in ViewBag.sectionamount)
            {
                @part.ToString("X2");
            }
        </p>
    </div>
    <br />


</div>



<h3>Section</h3>

<table class="table" style="table-layout:fixed; width:100%">
    <thead>
        <tr>
            <th style="width:8%">
                @Html.DisplayNameFor(model => model.Name)
            </th>
            <th style="width:10%">
                @Html.DisplayNameFor(model => model.Size)
            </th>
            <th style="width:10%">
                @Html.DisplayNameFor(model => model.Vaddr)
            </th>
            <th style="width:10%">
                @Html.DisplayNameFor(model => model.Total_sz)
            </th>
            <th style="width:62%">
                @Html.DisplayNameFor(model => model.content)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Name)
                </td>
                <td>
                    @foreach (byte part in item.Size)
                    {
                        @part.ToString("X2")
                    }
                    <!--@Html.DisplayFor(modelItem => item.Size)-->
                </td>
                <td>
                    @foreach (byte part in item.Vaddr)
                    {
                        @part.ToString("X2")
                    }
                </td>
                <td>
                    @foreach (byte part in item.Total_sz)
                    {
                        @part.ToString("X2")
                    }
                </td>
                <td style="word-wrap:break-word">
                    @foreach (byte part in item.content)
                    {
                        @part.ToString("X2")
                    }
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>




<a href="/Sections/PDFguide" target="_blank">PDF guide</a>

<a asp-action="ExportPDF" asp-route-srcurl="yoyo" style="float:right">Export this page to pdf file</a>
<br />
<input type="button" id="btnExport" value="Export" onclick="Export()" class="auto-style5" />


<script src="~/js/jsfiles/pdfmake.min.js"></script>
<script src="~/js/jsfiles/html2canvas.min.js"></script>
<script>
    function Export() {
        alert("hello");
        html2canvas(document.getElementById('pdftarget'), {
            onrendered: function (canvas) {
                var data = canvas.toDataURL();
                var docDefinition = { content: [{ image: data, width: 500 }] };
                pdfMake.createPdf(docDefinition).download("result.pdf");
                alert("Downloading Started");
            }
        });
    }
</script>