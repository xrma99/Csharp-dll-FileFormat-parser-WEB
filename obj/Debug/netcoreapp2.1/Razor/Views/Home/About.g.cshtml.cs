#pragma checksum "C:\Users\t-xinma\source\repos\FileUpload\Views\Home\About.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "085d2a826f73d50eb844109b9e85321e8a05ade5"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_About), @"mvc.1.0.view", @"/Views/Home/About.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/About.cshtml", typeof(AspNetCore.Views_Home_About))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\t-xinma\source\repos\FileUpload\Views\_ViewImports.cshtml"
using FileUpload;

#line default
#line hidden
#line 2 "C:\Users\t-xinma\source\repos\FileUpload\Views\_ViewImports.cshtml"
using FileUpload.Models;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"085d2a826f73d50eb844109b9e85321e8a05ade5", @"/Views/Home/About.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6c4da4f3990f4e4ed916571717d0596d929556ce", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_About : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 1 "C:\Users\t-xinma\source\repos\FileUpload\Views\Home\About.cshtml"
  
    ViewData["Title"] = "About";

#line default
#line hidden
            BeginContext(41, 6475, true);
            WriteLiteral(@"
<h3><strong>More detailed information about C# DLL file format</strong></h3>

<div>
    <p>The C# DLL file can be divided into two main parts: Header and Content.</p>
    <p>The Header consists of four parts. Composition and order are shown as follows:</p>
    <p>
        <ul>
            <li>MZ header: Magic id 0x4D5A</li>
            <li>Default Part</li>
            <li>PE header: Magic id 0x50450000</li>
            <li>Section headers</li>
        </ul>
    </p>
    <p>The Content is the sections content followed by the headers' order.</p>
</div>

<style>
    table, th, td {
        text-align: center;
    }

    table {
        width: 100%;
        margin: auto
    }
</style>

<div>
    <p><strong>Schematic diagram</strong></p>
    <table class=""table"" border=""1"">
        <tbody>
            <tr>
                <td>MZ header (/paragraph)</td>
            </tr>
            <tr>
                <td>Default Part (64 Bytes)</td>
            </tr>
            <tr>
   ");
            WriteLiteral(@"             <td>PE header (Optional Header Included)</td>
            </tr>
            <tr>
                <td>Section1 header (40 Bytes)</td>
            </tr>
            <tr>
                <td>Section2 header (40 Bytes)</td>
            </tr>
            <tr>
                <td>Section3 header (40 Bytes)</td>
            </tr>
            <tr>
                <td>......</td>
            </tr>
            <tr>
                <td>Reserved (16 Bytes, included in optional header)</td>
            </tr>
            <tr>
                <td>Section1 content</td>
            </tr>
            <tr>
                <td>Section2 content</td>
            </tr>
            <tr>
                <td>Section3 content</td>
            </tr>
            <tr>
                <td>......</td>
            </tr>
        </tbody>
    </table>
</div>

<div>
    <p><strong>MZ header</strong></p>
    <table class=""table"" border=""1"">
        <thead>
            <tr>
                <th co");
            WriteLiteral(@"lspan=""8"">
                    16 Bytes
                </th>
            </tr>
            <tr>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td>0x4D5A</td>
                <td>Number of Bytes in the last block</td>
                <td>Number of block</td>
                <td>Number of relocation entries</td>
                <td>Size of MZ header (unit:paragraph)</td>
                <td>Additional memory needed</td>
                <td>Maximum number of the stack</td>
                <td>Minimum number of the stack</td>
            </tr>
            <tr>
                <td>Initial value of the SP register</td>
                <td>Work checksum</td>
                <td>Initial valu");
            WriteLiteral(@"e of the IP register</td>
                <td>Initial value of the CS register</td>
                <td>Offset of the first relocation item</td>
                <td>Overlay number</td>
                <td colspan=""2"">Reserved</td>
            </tr>
            <tr>
                <td colspan=""2"">Reserved</td>
                <td>OEM identifier</td>
                <td>OEM information</td>
                <td colspan=""4"">Reserved</td>
            </tr>
            <tr>
                <td colspan=""6"">Reserved</td>
                <td colspan=""2"">File address of the new exe header</td>
            </tr>
            <tr>
                <td colspan=""8"">(Additional Information)</td>
            </tr>
        </tbody>
    </table>
</div>

<div>
    <p><strong>Default Part (64 Bytes)</strong></p>
    <p>Show the string <strong>This program cannot be run in DOS mode.</strong></p>
</div>

<div>
    <p><strong>PE header</strong></p>
    <table class=""table"" border=""1"">
        <thead>
");
            WriteLiteral(@"            <tr>
                <th colspan=""8"">
                    16 Bytes
                </th>
            </tr>
            <tr>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td colspan=""2"">0x50450000</td>
                <td>Machine type</td>
                <td>Number of Sections</td>
                <td colspan=""2"">(Unknown)</td>
                <td colspan=""2"">Pointer To Symbol Table</td>
            </tr>
            <tr>
                <td colspan=""2"">Number of Symbols</td>
                <td>Size of Optional Header</td>
                <td>Characteristics</td>
                <td colspan=""4"">(Optional Header)</td>
            </tr>
        </tbody>
    </table>
</d");
            WriteLiteral(@"iv>

<div>
    <p><strong>Section Header</strong></p>
    <table class=""table"" border=""1"">
        <thead>
            <tr>
                <th colspan=""8"">
                    16 Bytes
                </th>
            </tr>
            <tr>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
                <th>2 Bytes</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td colspan=""4"">section name</td>
                <td colspan=""2"">Valid Size</td>
                <td colspan=""2"">Virtual Address</td>
            </tr>
            <tr>
                <td colspan=""2"">Total Size (Valid+Reserved)</td>
                <td colspan=""2"">Pointer to content</td>
                <td colspan=""2"">Pointer to relocations</td>
                <td colspan=""2"">Pointer to Line nu");
            WriteLiteral(@"mbers</td>
            </tr>
            <tr>
                <td>Number of Relocations</td>
                <td>Number of Line numbers</td>
                <td colspan=""2"">Characteristics</td>
                <td colspan=""4"" style=""background-color:burlywood""></td>
            </tr>
        </tbody>
    </table>
</div>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
